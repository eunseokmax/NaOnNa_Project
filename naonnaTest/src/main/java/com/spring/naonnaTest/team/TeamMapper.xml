<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    
<mapper namespace="com.spring.naonnaTest.team.TeamMapper">

   <resultMap type="TeamVO" id="teamResultMap">
      <result property="team_name" column="TEAM_NAME"/>
      <result property="nickname" column="NICKNAME"/>
      <result property="age" column="AGE"/>
      <result property="emblem" column="EMBLEM"/>
      <result property="ability" column="ABILITY"/>
      <result property="intro" column="INTRO"/>
      <result property="number_team" column="NUMBER_TEAM"/>
      <result property="area" column="AREA"/>     
   </resultMap>
   
 	<!--  id는 Mapper.java(여기서 PeopleMapper.java)에 동일하게 사용해야된다.  -->
 
 <!--  
   <select id ="getPeopleList" resultMap="peopleResultMap">
      SELECT * FROM people order by id
   </select>
-->

	<select id ="getTeamlist" resultMap="teamResultMap">
      SELECT * FROM Team order by team_name
   </select>
   
   <select id ="findTeam" parameterType="com.spring.naonnaTest.team.TeamVO" resultMap="teamResultMap">
      SELECT * FROM Team where team_name like '%%'
      <if test = "team_name != ''">
      	AND team_name = #{team_name, javaType=String}
      </if>
      <if test = "area != ''">
      	AND area = #{area, javaType=String}
      </if>
      <if test = "nickname != ''">
      	AND nickname = #{nickname, javaType=String}
      </if>     
      order by team_name
   
   </select>
   
   <select id="getThatTeamInfo" parameterType="com.spring.naonnaTest.team.TeamVO" resultMap="teamResultMap">
      SELECT * FROM team where team_name = #{team_name,javaType=String}
   </select>
   
   
   
   <insert id="addTeam" parameterType="com.spring.naonnaTest.team.TeamVO" >
   	insert into team values (#{team_name},#{nickname},#{age},#{emblem},#{ability},#{intro},#{number_team},#{area})
   </insert>

   <!-- parameterType 에는 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래스명이나 별칭이 들어간다. -->
<!-- 
   <insert id="insertPeople" parameterType = "com.spring.springajax.PeopleVO">
      INSERT INTO  people VALUES
         (#{id, javaType=String},#{name, jdbcType=VARCHAR},#{job},#{address},#{bloodtype})   
    </insert>
 -->

</mapper>